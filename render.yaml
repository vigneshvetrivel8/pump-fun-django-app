# render.yaml

services:
  # A Web Service for your Django App
  - type: web
    name: my-django-app
    env: python
    plan: free
    # Build command with swap file to prevent out-of-memory errors
    buildCommand: |
      fallocate -l 1G /swapfile
      chmod 600 /swapfile
      mkswap /swapfile
      swapon /swapfile
      pip install -r requirements.txt
    # ⚠️ CRITICAL: Replace 'myproject.wsgi' with your project's name!
    startCommand: "gunicorn pumpfunproject.wsgi"
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.4

  # A Background Worker for your listener script
  - type: worker
    name: pump-listener-worker
    env: python
    plan: free
    # Build command with swap file to prevent out-of-memory errors
    buildCommand: |
      fallocate -l 1G /swapfile
      chmod 600 /swapfile
      mkswap /swapfile
      swapon /swapfile
      pip install -r requirements.txt
    # Start command: Runs your custom management command
    startCommand: "python manage.py run_pump_listener"
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.4